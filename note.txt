Integrating repayment routes and repayment controller skeleton.

✅ repayment.routes.js
This file defines the routes (endpoints) for repayment-related operations. It's where we map HTTP methods (GET, POST, PUT, DELETE) to controller functions.

Each route includes:

The HTTP method (e.g. GET, POST)

The endpoint path (e.g. /api/repayments/:id)

The access level (e.g. User, Admin)

A controller function that executes the logic for that route

✅ repayment.controller.js
This file defines the core logic for handling repayments using asyncHandler to manage async errors cleanly.

It includes these controller functions:

createRepayment: To log a repayment by a user.

getAllRepayments: Admin can view all repayment records.

getRepaymentById: Fetch details of a specific repayment.

getRepaymentsByUser: Get repayments made by a particular user.

getRepaymentsByLoan: View repayments tied to a specific loan.

updateRepayment: Admin can update/verify a repayment.

deleteRepayment: Admin can remove a repayment record.

Each function currently sends a simple JSON message and status code — this is a skeleton setup, ready to be filled in with business logic.