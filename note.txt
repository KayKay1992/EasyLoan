Integrating API For Create loan offer, create notifiction, create transaction and update setting pages. 

some changes was made. in adminDashoard before it was displaying created loan by the admin but we changed it in th admindashboard controller to give the distribution of applied loan by the user.

***********************************************************
createTransaction explained 

Starts loading state and destructures transaction data

Validates all required fields are filled, shows error if not

Checks amount is positive, shows error if invalid

Prepares payload with user, loan ID, amount, type, and method

Sends POST request to create transaction via API

Resets form on success or shows error on failure

Finally stops loading state regardless of outcome

This function handles transaction creation with validation, API calls, and proper state management.

* we passed the createTransaction() function to handleApprove function and also reset the payload with a toast message.

*For handle reject, we added a reject controller to the loan controller enables the admin to rejecet a loan then the route for the reject is also rejistered in route and also apiPath.js then the api was integrated in our handleReject function.


****************************************************************
CreateLoan explained

We first make some changes in createloan controller to include isOffer to be true.

we then changed the ui to remove the unnnecccessary input.
We also changed the functionality to include document which wwe attached even in the createloan route.accessing the upload multer.

Now we explain the api integration

Starts loading state when function is called

Creates FormData object to handle multipart form submission

Appends numeric loan details (amount, interest rate, term) to form data

Conditionally adds document file if present in loan data

Makes POST request with form data and multipart headers

Shows success toast notification on successful creation

Resets all loan form fields to empty values

Catches and logs any errors that occur during API call

Displays error toast if loan creation fails

Finally turns off loading state regardless of outcome

This function handles loan creation with file upload capability, proper data formatting, and user feedback.

*************************************************************
CreateNotification explained

The notification type was adjusted to tally to what we have in backend i.e create notification controller and notification model.

Api Integration explained

Here's the 10-line explanation:

1. Validates all required fields (type, title, message, userId) exist  
2. Returns early with error toast if any field is missing  
3. Prepares notification payload with the provided parameters  
4. Makes POST request to notification API endpoint  
5. Sends notification data in request body  
6. Shows success toast on successful creation  
7. Catches and logs any API errors that occur  
8. Displays error toast if notification creation fails  
9. Uses async/await for proper promise handling  
10. Provides user feedback for both success and failure cases  

This function handles notification creation with validation and proper error handling.

**************************************************************
CreateSetting explained.

Here's the 10-line explanation of the createSetting API integration:

1. Fetches existing settings on component mount using GET API to pre-fill form  
2. Validates all required fields are present before submission  
3. Parses comma-separated loan terms into array of numbers  
4. Converts all numeric inputs to proper types (float/int) for API payload  
5. Performs logical validation (min < max amounts, positive values etc.)  
6. Uses conditional API call - POST for new settings, PUT for updates  
7. Handles both creation and update scenarios with appropriate endpoints  
8. Stores new setting ID in state after successful creation  
9. Provides visual feedback with toast notifications for success/errors  
10. Maintains loading states during API operations for better UX  

The integration follows REST conventions while handling complex data types and validation requirements specific to loan settings.
